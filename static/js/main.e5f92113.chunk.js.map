{"version":3,"sources":["components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","App.tsx","index.tsx"],"names":["PostsList","posts","selectPostId","selectedPostId","className","map","post","userId","body","id","type","onClick","getAllComments","postId","fetch","then","response","json","url","NewCommentForm","useState","name","setName","email","setEmail","setBody","handleChange","event","input","target","value","onSubmit","preventDefault","options","method","headers","JSON","stringify","postComment","placeholder","onChange","required","PostDetails","comments","setComments","setPost","showComments","setShowComments","useEffect","responce","length","comment","App","setPosts","userSelector","setUserSelector","setselectedPostId","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5f92113.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport { Post } from '../../types/post';\n\ninterface Props {\n  posts: Post[];\n  selectPostId: any,\n  selectedPostId: number,\n}\n\nexport const PostsList: React.FC<Props> = ({ posts, selectPostId, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map((post: Post) => {\n        return (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.body}\n            </div>\n            {post.id === selectedPostId ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => selectPostId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__user-button button\"\n                onClick={() => selectPostId(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api/comments?postId=';\n\nexport const getAllComments = (postId: number) => {\n  return fetch(`${BASE_URL}${postId}`)\n    .then(response => response.json());\n};\n\nconst url = 'https://mate.academy/students-api/comments';\n\nexport const postComment = (postId: number, name: string, email: string, body: string) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  };\n\n  fetch(url, options);\n};\n\nexport const deleteComment = (postId: number) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  fetch(`${url}/${postId}`, options);\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { postComment } from '../../api/comments';\n\ninterface Props {\n  selectedPostId: number,\n  getAllComments: any,\n}\n\nexport const NewCommentForm: React.FC<Props> = ({ selectedPostId, getAllComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleChange = (event: any) => {\n    const input = event.target;\n\n    switch (input.name) {\n      case 'name':\n        setName(input.value);\n        break;\n\n      case 'email':\n        setEmail(input.value);\n        break;\n\n      case 'body':\n        setBody(input.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addComment = (event: any) => {\n    event.preventDefault();\n    postComment(selectedPostId, name, email, body);\n    setName('');\n    setEmail('');\n    setBody('');\n    getAllComments();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={addComment}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          required\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          required\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getAllComments, deleteComment } from '../../api/comments';\nimport { getPost } from '../../api/posts';\nimport './PostDetails.scss';\n\ninterface Props {\n  selectedPostId: number,\n}\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [comments, setComments] = useState<any>();\n  const [post, setPost] = useState<any>();\n  const [showComments, setShowComments] = useState(true);\n\n  const setCommentsFromServer = () => {\n    getAllComments(selectedPostId)\n      .then(responce => setComments(responce));\n  };\n\n  useEffect(() => {\n    getAllComments(selectedPostId)\n      .then(responce => setComments(responce));\n\n    getPost(selectedPostId)\n      .then((responce) => setPost(responce));\n  }, [selectedPostId, comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>\n        Post details:\n        {selectedPostId}\n      </h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post && post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {showComments && comments && comments.length !== 0 && (\n          <>\n            <button type=\"button\" className=\"button\" onClick={() => setShowComments(false)}>\n              {'Hide '}\n              {comments.length}\n              {' comments'}\n            </button>\n\n            <ul className=\"PostDetails__list\">\n              {comments && comments.map((comment: any) => {\n                return (\n                  <li key={comment.id} className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          </>\n        )}\n        {comments && comments.length !== 0 && !showComments && (\n          <button type=\"button\" className=\"button\" onClick={() => setShowComments(true)}>\n            {'Show '}\n            {comments && comments.length}\n            {' comments'}\n          </button>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            getAllComments={setCommentsFromServer}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/posts?userId=';\n\nexport const getAllPosts = () => {\n  return fetch('https://mate.academy/students-api/posts')\n    .then(response => response.json());\n};\n\nexport const getUserPosts = (userId: number) => {\n  return fetch(`${BASE_URL}${userId}`)\n    .then(response => response.json());\n};\n\nexport const getPost = (postId: number) => {\n  return fetch(`https://mate.academy/students-api/posts/${postId}`)\n    .then(responce => responce.json());\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getAllPosts, getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [userSelector, setUserSelector] = useState(0);\n  const [selectedPostId, setselectedPostId] = useState(0);\n\n  useEffect(() => {\n    if (userSelector === 0) {\n      getAllPosts()\n        .then(responce => {\n          setPosts(responce);\n        });\n    } else {\n      getUserPosts(userSelector)\n        .then(responce => {\n          setPosts(responce);\n        });\n    }\n  }, [userSelector]);\n\n  const handleChange = (event: any) => {\n    setUserSelector(event.target.value);\n  };\n\n  const selectPostId = (id: number) => {\n    setselectedPostId(id);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"user-selector\">\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" id=\"user-selector\" value={userSelector} onChange={handleChange}>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList posts={posts} selectPostId={selectPostId} selectedPostId={selectedPostId} />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && (\n            <PostDetails selectedPostId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}